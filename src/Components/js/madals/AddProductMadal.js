import { useEffect, useState } from "react"
import {useSelector} from "react-redux"
import { https } from "../../../axios"
import "../../scss/productMadal.scss"
import gr from "../../../img/Gr.png"


export default function AddProductMadal({setMadal}) {
    const token = useSelector(state => state.user.user.token)
    const [categories, setCategories] = useState([])
    const [productStatus, setProductStatus] = useState([])
    const [quantity, setQuantity] = useState("")
    const [categoryId, setCategoryId] = useState("")
    const [price, setPrice] = useState("")
    const [salePrice, setSalePrice] = useState("")
    const [frameRu, setFrameRu] = useState("")
    const [frameUz, setFrameUz] = useState("")
    const [size, setSize] = useState("")
    const [depth, setDepth] = useState("")
    const [equipmentRu, setEquipmentRu] = useState("")
    const [equipmentUz, setEquipmentUz] = useState("")
    const [statusId, setStatusId] = useState("")
    const [productImage, setProductImage] = useState("")
    const [statusReq, setStatusReq] = useState(null)

    const getCategories = async () => {
        try{
            const data = await https({
                method: "get",
                url: "api/category",
                headers:{
                    Authorization: `Bearer ${token}`,
                },
            })

            setCategories(data?.data?.data)
            setCategoryId(data?.data?.data[0].category_id)
        }catch(err){
            console.log(err)
        }
    }
    
    const getProductStatus = async () => {
        try{
            const data = await https({
                method: "get",
                url: "api/product/status/info",
                headers:{
                    Authorization: `Bearer ${token}`,
                },
            })

            setProductStatus(data?.data?.data)
            setStatusId(data?.data?.data[0].id)
        }catch(err){
            console.log(err)
        }
    }

    const convertBase64 = (file) => {
        return new Promise((resolve, reject) => {
            const fileReader = new FileReader();
            fileReader.readAsDataURL(file);
    
            fileReader.onload = () => {
                resolve(fileReader.result);
            };
    
            fileReader.onerror = (error) => {
                reject(error);
            };
        });
    };
    
    const uploadImage = async (event) => {
        const file = event.target.files[0];
        const base64 = await convertBase64(file);
        setProductImage(base64);
    };

    const editProduct = async () => {
        setStatusReq("active")
        console.log(
            categoryId,
            productImage,
            price,
            salePrice,
            quantity,
            frameRu,
            frameUz,
            size,
            depth,
            equipmentRu,
            equipmentUz,
            statusId)
        try{
            const data = await https({
                method: 'post',
                url: `/api/product/`,
                headers:{
                    Authorization: `Bearer ${token}`,
                },
                  data: {
                    categoryId,
                    productImage,
                    price,
                    salePrice,
                    quantity,
                    frameRu,
                    frameUz,
                    size,
                    depth,
                    equipmentRu,
                    equipmentUz,
                    statusId,
                }
            })
            console.log(data)
            setStatusReq("complate")
        }catch(err){
            console.log(err)
        }
    }

    useEffect(()=>{
        getCategories()
        getProductStatus()
    },[])

    return (
        <>
            <div onClick={()=> {setMadal(false);}} className="fixed z-10 top-0 left-0 w-screen h-screen" style={{"backgroundColor": "rgba(0, 0, 0, 0.2)", "backdropFilter": "blur(7px)"}}></div>
            <div className="scrool absolute z-10 flex flex-col justify-between items-center top-0 bg-slate-100 p-12 pt-6 pb-9 rounded-3xl right-1/2 translate-x-1/2 top-10" style={{"width": "1130px"}}>
                <span onClick={() =>{ setMadal(false);}} className="absolute top-8 right-8 p-2 rounded-full hover:bg-slate-200 cursor-pointer">
                    <svg xmlns="http://www.w3.org/2000/svg" width="33" height="32" viewBox="0 0 33 32" fill="none">
                        <rect width="41.3575" height="3.11651" rx="1.55825" transform="matrix(0.727944 0.685636 -0.727944 0.685636 2.55737 0.508789)" fill="#B9B9B9"/>
                        <rect width="41.3575" height="3.11651" rx="1.55825" transform="matrix(0.727944 -0.685636 0.727944 0.685636 0.00292969 28.5811)" fill="#B9B9B9"/>
                    </svg>
                </span>
                {
                    statusReq === null ? 
                    <>
                        <div className="relative h-80 flex flex-col cursor-pointer bg-slate-50 justify-center rounded-3xl shadow-lg border-slate-400 border-2 border-dashed mb-6 mt-4"  style={{"width": "690px"}}>
                            <input onChange={(e) => {uploadImage(e);}} type="file" className="uploadfile absolute w-full h-full cursor-pointer"/>
                            {
                                productImage ? <img className="w-full h-full object-contain rounded-3xl" src={productImage} alt="" crossOrigin="anonymous"/> : 
                                <div className="flex justify-center text-center">
                                    <svg className="mr-7" xmlns="http://www.w3.org/2000/svg" width="86" height="65" viewBox="0 0 86 65" fill="none">
                                        <path d="M8.0625 0C5.92419 0 3.87346 0.84944 2.36145 2.36145C0.849439 3.87346 0 5.92419 0 8.0625L0 56.4375C0 58.5758 0.849439 60.6265 2.36145 62.1385C3.87346 63.6506 5.92419 64.5 8.0625 64.5H77.9375C80.0758 64.5 82.1265 63.6506 83.6385 62.1385C85.1506 60.6265 86 58.5758 86 56.4375V8.0625C86 5.92419 85.1506 3.87346 83.6385 2.36145C82.1265 0.84944 80.0758 0 77.9375 0H8.0625ZM77.9375 5.375C78.6503 5.375 79.3338 5.65815 79.8379 6.16215C80.3419 6.66615 80.625 7.34973 80.625 8.0625V40.3125L60.3344 29.8474C59.8303 29.5949 59.2596 29.5073 58.703 29.597C58.1465 29.6867 57.6322 29.9492 57.233 30.3472L37.2918 50.2885L22.9942 40.764C22.478 40.4203 21.8588 40.2657 21.2417 40.3265C20.6245 40.3872 20.0473 40.6595 19.608 41.0972L5.38575 53.75V56.6525C5.37932 56.581 5.37574 56.5093 5.375 56.4375V8.0625C5.375 7.34973 5.65815 6.66615 6.16215 6.16215C6.66615 5.65815 7.34973 5.375 8.0625 5.375H77.9375Z" fill="#898989"/>
                                        <path d="M33.3252 18.8125C33.3252 20.9508 32.4758 23.0015 30.9637 24.5135C29.4517 26.0256 27.401 26.875 25.2627 26.875C23.1244 26.875 21.0737 26.0256 19.5616 24.5135C18.0496 23.0015 17.2002 20.9508 17.2002 18.8125C17.2002 16.6742 18.0496 14.6235 19.5616 13.1115C21.0737 11.5994 23.1244 10.75 25.2627 10.75C27.401 10.75 29.4517 11.5994 30.9637 13.1115C32.4758 14.6235 33.3252 16.6742 33.3252 18.8125Z" fill="#898989"/>
                                    </svg>
                                    <span className="text-3xl py-3.5 text-slate-400">Выберите изображение</span>
                                </div>
                            }
                        </div> 
                        <div className="flex justify-between flex-wrap px-9">
                            <div className="relative flex flex-col pl-10 mx-5 mb-3">
                                <svg className="absolute left-0 bottom-2" xmlns="http://www.w3.org/2000/svg" width="29" height="29" viewBox="0 0 29 29" fill="none">
                                    <path d="M1.56845 12.7127H10.9791C11.3951 12.7127 11.7941 12.551 12.0882 12.2632C12.3823 11.9754 12.5476 11.5851 12.5476 11.1781V1.97019C12.5476 1.56318 12.3823 1.17284 12.0882 0.885034C11.7941 0.597232 11.3951 0.435547 10.9791 0.435547H1.56845C1.15247 0.435547 0.753529 0.597232 0.459388 0.885034C0.165247 1.17284 0 1.56318 0 1.97019V11.1781C0 11.5851 0.165247 11.9754 0.459388 12.2632C0.753529 12.551 1.15247 12.7127 1.56845 12.7127ZM17.2529 12.7127H26.6636C27.0796 12.7127 27.4785 12.551 27.7727 12.2632C28.0668 11.9754 28.2321 11.5851 28.2321 11.1781V1.97019C28.2321 1.56318 28.0668 1.17284 27.7727 0.885034C27.4785 0.597232 27.0796 0.435547 26.6636 0.435547H17.2529C16.8369 0.435547 16.438 0.597232 16.1439 0.885034C15.8497 1.17284 15.6845 1.56318 15.6845 1.97019V11.1781C15.6845 11.5851 15.8497 11.9754 16.1439 12.2632C16.438 12.551 16.8369 12.7127 17.2529 12.7127ZM1.56845 28.0591H10.9791C11.3951 28.0591 11.7941 27.8975 12.0882 27.6097C12.3823 27.3219 12.5476 26.9315 12.5476 26.5245V17.3166C12.5476 16.9096 12.3823 16.5193 12.0882 16.2315C11.7941 15.9437 11.3951 15.782 10.9791 15.782H1.56845C1.15247 15.782 0.753529 15.9437 0.459388 16.2315C0.165247 16.5193 0 16.9096 0 17.3166V26.5245C0 26.9315 0.165247 27.3219 0.459388 27.6097C0.753529 27.8975 1.15247 28.0591 1.56845 28.0591ZM21.9583 28.0591C25.4183 28.0591 28.2321 25.306 28.2321 21.9206C28.2321 18.5351 25.4183 15.782 21.9583 15.782C18.4983 15.782 15.6845 18.5351 15.6845 21.9206C15.6845 25.306 18.4983 28.0591 21.9583 28.0591Z" fill="#545454"/>
                                </svg>
                                <label className="text-2xl text-slate-400">Категории</label>
                                <select value={categoryId} onChange={(e)=>{setCategoryId(e.target.value)}} className="w-96 h-12 text-3xl text-slate-600 bg-transparent cursor-pointer border-b-2 border-solid border-slate-600">
                                    {
                                        categories.map(item => {
                                            console.log(item, categoryId)
                                            return (
                                                <option value={item.category_id}>{item.name_ru}</option>
                                            )
                                        })
                                    }
                                </select>
                            </div>
                            <div className="relative flex flex-col pl-10 mx-5 mb-3">
                                <svg className="absolute left-0 bottom-2" xmlns="http://www.w3.org/2000/svg" width="29" height="29" viewBox="0 0 29 29" fill="none">
                                    <path d="M28.2168 25.521C28.217 25.9205 28.1385 26.3161 27.9858 26.6852C27.8331 27.0544 27.6091 27.3898 27.3267 27.6724C27.0442 27.9549 26.7089 28.179 26.3398 28.3319C25.9708 28.4848 25.5752 28.5635 25.1757 28.5634H3.04219C2.64277 28.5634 2.24728 28.4846 1.8783 28.3317C1.50933 28.1787 1.1741 27.9546 0.891768 27.6721C0.609438 27.3895 0.38554 27.0541 0.232863 26.685C0.0801857 26.316 0.00172185 25.9204 0.00195364 25.521V3.38927C0.0019536 2.58286 0.322235 1.80948 0.892365 1.23918C1.4625 0.668885 2.23579 0.348378 3.04219 0.348145L25.1757 0.348145C25.9822 0.348145 26.7557 0.668547 27.3261 1.23887C27.8964 1.80919 28.2168 2.58271 28.2168 3.38927V25.521Z" fill="#545454"/>
                                    <path d="M7.4076 11.5047V6.40172C6.45785 7.13135 5.81866 7.49527 5.48958 7.49527C5.33298 7.49527 5.19315 7.43308 5.07272 7.30735C5.01454 7.25097 4.96834 7.18342 4.93689 7.10876C4.90543 7.0341 4.88937 6.95386 4.88965 6.87285C4.88965 6.68228 4.94965 6.54244 5.06919 6.45157C5.18874 6.36202 5.40003 6.24689 5.70265 6.10485C6.1548 5.89178 6.51741 5.66813 6.78782 5.43257C7.05766 5.19751 7.29965 4.93228 7.50906 4.64207C7.71771 4.34917 7.85358 4.17051 7.9171 4.10302C7.98018 4.03553 8.10149 4.00244 8.27661 4.00244C8.47424 4.00244 8.63304 4.07876 8.75347 4.23227C8.87302 4.38578 8.93213 4.59708 8.93213 4.86572V11.2859C8.93213 12.0362 8.67672 12.4125 8.16413 12.4125C7.93695 12.4125 7.75344 12.3353 7.61449 12.1822C7.47597 12.0296 7.4076 11.8029 7.4076 11.5047ZM19.1424 11.019H22.0693C22.3604 11.019 22.5828 11.0785 22.7372 11.1981C22.8893 11.3176 22.9665 11.4808 22.9665 11.686C22.9665 11.8695 22.9061 12.0239 22.7848 12.1514C22.663 12.2788 22.4791 12.3424 22.2329 12.3424H18.1058C17.8252 12.3424 17.6064 12.2652 17.4489 12.109C17.3745 12.0391 17.3153 11.9545 17.2751 11.8606C17.2348 11.7667 17.2144 11.6655 17.2151 11.5633C17.2151 11.4288 17.2654 11.2497 17.366 11.0274C17.4675 10.8059 17.5773 10.6308 17.6969 10.5033C18.1328 10.0482 18.5815 9.60547 19.0423 9.17552C19.4424 8.80762 19.7287 8.56544 19.9003 8.44943C20.2069 8.23284 20.4614 8.01536 20.6643 7.797C20.8542 7.5984 21.0116 7.37107 21.1306 7.12341C21.2327 6.9129 21.2873 6.68246 21.2903 6.44848C21.2903 6.20939 21.2329 5.99501 21.1191 5.8062C21.0074 5.61955 20.8464 5.46736 20.6537 5.3664C20.4567 5.26094 20.2362 5.20678 20.0128 5.20892C19.5218 5.20892 19.1371 5.42375 18.8561 5.85385C18.82 5.90987 18.7569 6.06382 18.6691 6.3135C18.5809 6.56494 18.4821 6.75904 18.3727 6.89137C18.2619 7.02592 18.1009 7.09341 17.887 7.09341C17.6999 7.09341 17.5451 7.03077 17.4216 6.90769C17.2976 6.78462 17.2363 6.61655 17.2363 6.40305C17.2363 6.14499 17.2941 5.87634 17.4106 5.59623C17.53 5.30954 17.7063 5.05007 17.9289 4.83352C18.1592 4.60546 18.4507 4.42107 18.8032 4.28079C19.1561 4.1414 19.5699 4.07082 20.045 4.07082C20.6167 4.07082 21.1037 4.15992 21.5086 4.34034C21.7684 4.45803 22.0025 4.62559 22.1977 4.83352C22.602 5.26055 22.827 5.82646 22.8263 6.41452C22.8263 6.87814 22.7107 7.30118 22.4822 7.67922C22.2519 8.05859 22.0164 8.35503 21.7781 8.5703C21.5382 8.78557 21.1372 9.12259 20.5752 9.5818C20.0123 10.0415 19.6272 10.3992 19.4177 10.6529C19.3168 10.767 19.2248 10.8886 19.1424 11.0168V11.019ZM7.53641 19.7753C7.88048 19.7753 8.1778 19.6743 8.42748 19.4723C8.67628 19.2707 8.79935 18.9809 8.79935 18.6033C8.79935 18.3152 8.70054 18.0673 8.50291 17.8613C8.30441 17.6526 8.03664 17.549 7.7005 17.549C7.47333 17.549 7.28452 17.5812 7.13807 17.6443C7.00223 17.6985 6.8817 17.7851 6.78693 17.8966C6.70003 18.0002 6.61886 18.1357 6.54255 18.3002C6.46624 18.4647 6.39698 18.6191 6.33257 18.766C6.28917 18.8497 6.2174 18.9153 6.1301 18.9509C6.02464 18.9976 5.91016 19.0205 5.79484 19.0179C5.64486 19.0179 5.50811 18.957 5.38239 18.8353C5.25755 18.714 5.19491 18.5521 5.19491 18.3505C5.19491 18.1555 5.2549 17.9513 5.37092 17.7369C5.4887 17.5221 5.66118 17.3165 5.88748 17.122C6.11333 16.9283 6.39433 16.7721 6.73135 16.6539C7.06661 16.5361 7.44201 16.477 7.85799 16.477C8.22015 16.477 8.55144 16.5278 8.85052 16.6261C9.13538 16.7174 9.39991 16.8628 9.62955 17.0545C9.84967 17.2419 10.016 17.4581 10.1289 17.7056C10.2414 17.9526 10.297 18.2177 10.297 18.5022C10.297 18.8759 10.2154 19.1966 10.0521 19.4626C9.88937 19.7312 9.6569 19.991 9.35429 20.246C9.64543 20.4026 9.89069 20.5821 10.0918 20.7833C10.2921 20.9862 10.4417 21.209 10.5422 21.4543C10.6433 21.6986 10.6931 21.9638 10.6931 22.2483C10.6931 22.5884 10.6256 22.9175 10.4906 23.2342C10.3502 23.556 10.1447 23.8452 9.88717 24.0838C9.6138 24.3385 9.29264 24.5364 8.94227 24.6661C8.57746 24.8064 8.17472 24.8769 7.73403 24.8769C7.28496 24.8769 6.8831 24.7958 6.52887 24.6348C6.17245 24.4755 5.88042 24.2748 5.65104 24.0335C5.42077 23.7927 5.24696 23.543 5.12918 23.2849C5.0114 23.0269 4.95317 22.8147 4.95317 22.6453C4.95317 22.4291 5.02331 22.2536 5.16315 22.1217C5.30343 21.988 5.47767 21.9227 5.68721 21.9227C5.7922 21.9227 5.89365 21.9527 5.98982 22.0154C6.08775 22.0771 6.15083 22.1508 6.18127 22.2364C6.37536 22.7565 6.58357 23.142 6.80546 23.3943C7.02911 23.6462 7.34099 23.7728 7.74506 23.7728C7.98703 23.7726 8.22486 23.7101 8.43564 23.5912C8.64642 23.4724 8.82303 23.3013 8.94845 23.0944C9.08873 22.8694 9.15887 22.6104 9.15887 22.3149C9.15887 21.8773 9.03844 21.5337 8.79935 21.2862C8.56026 21.0374 8.22721 20.9134 7.80196 20.9134C7.72653 20.9134 7.61184 20.9205 7.45436 20.9364C7.29687 20.9496 7.1963 20.9575 7.15174 20.9575C6.94662 20.9575 6.78693 20.9068 6.67445 20.8032C6.5624 20.6999 6.50726 20.5579 6.50726 20.3739C6.50726 20.1962 6.57475 20.0502 6.70841 19.9403C6.84296 19.83 7.04367 19.7749 7.30878 19.7749H7.53729L7.53641 19.7753ZM20.734 24.0573V23.0158H17.9192C17.5636 23.0158 17.2976 22.9342 17.1207 22.7741C16.943 22.6131 16.8543 22.3943 16.8543 22.1177C16.8543 22.0467 16.8667 21.9748 16.894 21.902C16.9191 21.8283 16.9588 21.752 17.0113 21.6722C17.0638 21.5914 17.1185 21.5138 17.1741 21.4393C17.2301 21.3647 17.2985 21.2738 17.3819 21.1644L20.3524 17.1899C20.5465 16.9287 20.7067 16.7391 20.8324 16.6204C20.8923 16.5629 20.9629 16.5179 21.0403 16.4878C21.1177 16.4578 21.2002 16.4433 21.2832 16.4453C21.8518 16.4453 22.1355 16.7695 22.1355 17.4193V21.76H22.3772C22.6644 21.76 22.8951 21.7988 23.0689 21.8777C23.2427 21.9558 23.33 22.1279 23.33 22.3934C23.33 22.61 23.2599 22.7679 23.1165 22.8672C22.9749 22.9664 22.7614 23.0167 22.4773 23.0167H22.1359V24.0582C22.1359 24.3458 22.0728 24.5607 21.944 24.7001C21.8179 24.8399 21.648 24.9109 21.435 24.9109C21.2259 24.9109 21.0573 24.8386 20.9281 24.6948C20.7984 24.5496 20.734 24.3388 20.734 24.0578V24.0573ZM18.3228 21.7595H20.734V18.5022L18.3228 21.7595Z" fill="white"/>
                                </svg>
                                <label className="text-2xl text-slate-400">Количество</label>
                                <input value={quantity} onChange={(e) => {setQuantity(e.target.value)}} type="number" className="w-96 h-12 text-3xl text-slate-600 outline-none border-b-2 border-solid border-slate-600"/>
                            </div>
                            <div className="relative flex flex-col pl-10 mx-5 mb-3">
                                <svg className="absolute left-0 bottom-2" xmlns="http://www.w3.org/2000/svg" width="32" height="29" viewBox="0 0 32 29" fill="none">
                                    <path d="M2.376 0.455078H30.3257C30.7375 0.455078 31.1325 0.620325 31.4237 0.914465C31.7149 1.20861 31.8785 1.60755 31.8785 2.02352V27.1187C31.8785 27.5347 31.7149 27.9336 31.4237 28.2277C31.1325 28.5219 30.7375 28.6871 30.3257 28.6871H2.376C1.96419 28.6871 1.56924 28.5219 1.27804 28.2277C0.986836 27.9336 0.823242 27.5347 0.823242 27.1187V2.02352C0.823242 1.60755 0.986836 1.20861 1.27804 0.914465C1.56924 0.620325 1.96419 0.455078 2.376 0.455078ZM3.92877 3.59197V25.5502H28.773V3.59197H3.92877ZM10.9162 17.708H19.4564C19.6623 17.708 19.8598 17.6254 20.0054 17.4783C20.151 17.3312 20.2328 17.1318 20.2328 16.9238C20.2328 16.7158 20.151 16.5163 20.0054 16.3692C19.8598 16.2222 19.6623 16.1395 19.4564 16.1395H13.2453C12.2158 16.1395 11.2284 15.7264 10.5004 14.9911C9.77242 14.2557 9.36343 13.2584 9.36343 12.2184C9.36343 11.1785 9.77242 10.1811 10.5004 9.44578C11.2284 8.71043 12.2158 8.29731 13.2453 8.29731H14.7981V5.16042H17.9036V8.29731H21.7855V11.4342H13.2453C13.0394 11.4342 12.842 11.5168 12.6964 11.6639C12.5508 11.811 12.469 12.0104 12.469 12.2184C12.469 12.4264 12.5508 12.6259 12.6964 12.773C12.842 12.92 13.0394 13.0027 13.2453 13.0027H19.4564C20.4859 13.0027 21.4733 13.4158 22.2013 14.1511C22.9293 14.8865 23.3383 15.8838 23.3383 16.9238C23.3383 17.9637 22.9293 18.9611 22.2013 19.6964C21.4733 20.4318 20.4859 20.8449 19.4564 20.8449H17.9036V23.9818H14.7981V20.8449H10.9162V17.708Z" fill="#545454"/>
                                </svg>
                                <label className="text-2xl text-slate-400">Стартая цена (сум) </label>
                                <input value={price} onChange={(e) => {setPrice(e.target.value)}} type="number" className="w-96 h-12 text-3xl text-slate-600 outline-none border-b-2 border-solid border-slate-600"/>
                            </div>
                            <div className="relative flex flex-col pl-10 mx-5 mb-3">
                                <svg className="absolute left-0 bottom-2" xmlns="http://www.w3.org/2000/svg" width="32" height="29" viewBox="0 0 32 29" fill="none">
                                    <path d="M2.376 0.455078H30.3257C30.7375 0.455078 31.1325 0.620325 31.4237 0.914465C31.7149 1.20861 31.8785 1.60755 31.8785 2.02352V27.1187C31.8785 27.5347 31.7149 27.9336 31.4237 28.2277C31.1325 28.5219 30.7375 28.6871 30.3257 28.6871H2.376C1.96419 28.6871 1.56924 28.5219 1.27804 28.2277C0.986836 27.9336 0.823242 27.5347 0.823242 27.1187V2.02352C0.823242 1.60755 0.986836 1.20861 1.27804 0.914465C1.56924 0.620325 1.96419 0.455078 2.376 0.455078ZM3.92877 3.59197V25.5502H28.773V3.59197H3.92877ZM10.9162 17.708H19.4564C19.6623 17.708 19.8598 17.6254 20.0054 17.4783C20.151 17.3312 20.2328 17.1318 20.2328 16.9238C20.2328 16.7158 20.151 16.5163 20.0054 16.3692C19.8598 16.2222 19.6623 16.1395 19.4564 16.1395H13.2453C12.2158 16.1395 11.2284 15.7264 10.5004 14.9911C9.77242 14.2557 9.36343 13.2584 9.36343 12.2184C9.36343 11.1785 9.77242 10.1811 10.5004 9.44578C11.2284 8.71043 12.2158 8.29731 13.2453 8.29731H14.7981V5.16042H17.9036V8.29731H21.7855V11.4342H13.2453C13.0394 11.4342 12.842 11.5168 12.6964 11.6639C12.5508 11.811 12.469 12.0104 12.469 12.2184C12.469 12.4264 12.5508 12.6259 12.6964 12.773C12.842 12.92 13.0394 13.0027 13.2453 13.0027H19.4564C20.4859 13.0027 21.4733 13.4158 22.2013 14.1511C22.9293 14.8865 23.3383 15.8838 23.3383 16.9238C23.3383 17.9637 22.9293 18.9611 22.2013 19.6964C21.4733 20.4318 20.4859 20.8449 19.4564 20.8449H17.9036V23.9818H14.7981V20.8449H10.9162V17.708Z" fill="#545454"/>
                                </svg>
                                <label className="text-2xl text-slate-400">Цена со скидкой (сум)  </label>
                                <input value={salePrice} onChange={(e)=>{setSalePrice(e.target.value)}} type="number" className="w-96 h-12 text-3xl text-slate-600 outline-none border-b-2 border-solid border-slate-600"/>
                            </div>
                            <div className="relative flex flex-col pl-10 mx-5 mb-3">
                                <svg className="absolute left-0 bottom-2" xmlns="http://www.w3.org/2000/svg" width="29" height="29" viewBox="0 0 29 29" fill="none">
                                    <path d="M26.7654 0.5625H2.87677C2.3008 0.5625 1.74842 0.832903 1.34115 1.31422C0.933881 1.79555 0.705078 2.44836 0.705078 3.12905V26.228C0.705078 26.9087 0.933881 27.5615 1.34115 28.0428C1.74842 28.5241 2.3008 28.7945 2.87677 28.7945H26.7654C27.3414 28.7945 27.8938 28.5241 28.301 28.0428C28.7083 27.5615 28.9371 26.9087 28.9371 26.228V3.12905C28.9371 2.44836 28.7083 1.79555 28.301 1.31422C27.8938 0.832903 27.3414 0.5625 26.7654 0.5625ZM9.39186 24.9447H5.04847C4.76048 24.9447 4.4843 24.8095 4.28066 24.5689C4.07702 24.3282 3.96262 24.0018 3.96262 23.6614V18.5283C3.96262 18.188 4.07702 17.8616 4.28066 17.6209C4.4843 17.3803 4.76048 17.2451 5.04847 17.2451C5.33645 17.2451 5.61264 17.3803 5.81628 17.6209C6.01992 17.8616 6.13432 18.188 6.13432 18.5283V22.3782H9.39186C9.67985 22.3782 9.95604 22.5134 10.1597 22.754C10.3633 22.9947 10.4777 23.3211 10.4777 23.6614C10.4777 24.0018 10.3633 24.3282 10.1597 24.5689C9.95604 24.8095 9.67985 24.9447 9.39186 24.9447ZM25.6796 10.8287C25.6796 11.169 25.5652 11.4954 25.3615 11.7361C25.1579 11.9768 24.8817 12.112 24.5937 12.112C24.3057 12.112 24.0296 11.9768 23.8259 11.7361C23.6223 11.4954 23.5079 11.169 23.5079 10.8287V6.97887H20.2503C19.9624 6.97887 19.6862 6.84367 19.4825 6.60301C19.2789 6.36235 19.1645 6.03594 19.1645 5.6956C19.1645 5.35525 19.2789 5.02885 19.4825 4.78819C19.6862 4.54753 19.9624 4.41232 20.2503 4.41232H24.5937C24.8817 4.41232 25.1579 4.54753 25.3615 4.78819C25.5652 5.02885 25.6796 5.35525 25.6796 5.6956V10.8287Z" fill="#545454"/>
                                </svg>
                                <label className="text-2xl text-slate-400">Рамка  </label>
                                <input value={frameRu} onChange={(e)=>{setFrameRu(e.target.value)}} type="text" className="w-96 h-12 text-3xl text-slate-600 outline-none border-b-2 border-solid border-slate-600"/>
                            </div>
                            <div className="relative flex flex-col pl-10 mx-5 mb-3">
                                <svg className="absolute left-0 bottom-2" xmlns="http://www.w3.org/2000/svg" width="29" height="29" viewBox="0 0 29 29" fill="none">
                                    <path d="M26.7654 0.5625H2.87677C2.3008 0.5625 1.74842 0.832903 1.34115 1.31422C0.933881 1.79555 0.705078 2.44836 0.705078 3.12905V26.228C0.705078 26.9087 0.933881 27.5615 1.34115 28.0428C1.74842 28.5241 2.3008 28.7945 2.87677 28.7945H26.7654C27.3414 28.7945 27.8938 28.5241 28.301 28.0428C28.7083 27.5615 28.9371 26.9087 28.9371 26.228V3.12905C28.9371 2.44836 28.7083 1.79555 28.301 1.31422C27.8938 0.832903 27.3414 0.5625 26.7654 0.5625ZM9.39186 24.9447H5.04847C4.76048 24.9447 4.4843 24.8095 4.28066 24.5689C4.07702 24.3282 3.96262 24.0018 3.96262 23.6614V18.5283C3.96262 18.188 4.07702 17.8616 4.28066 17.6209C4.4843 17.3803 4.76048 17.2451 5.04847 17.2451C5.33645 17.2451 5.61264 17.3803 5.81628 17.6209C6.01992 17.8616 6.13432 18.188 6.13432 18.5283V22.3782H9.39186C9.67985 22.3782 9.95604 22.5134 10.1597 22.754C10.3633 22.9947 10.4777 23.3211 10.4777 23.6614C10.4777 24.0018 10.3633 24.3282 10.1597 24.5689C9.95604 24.8095 9.67985 24.9447 9.39186 24.9447ZM25.6796 10.8287C25.6796 11.169 25.5652 11.4954 25.3615 11.7361C25.1579 11.9768 24.8817 12.112 24.5937 12.112C24.3057 12.112 24.0296 11.9768 23.8259 11.7361C23.6223 11.4954 23.5079 11.169 23.5079 10.8287V6.97887H20.2503C19.9624 6.97887 19.6862 6.84367 19.4825 6.60301C19.2789 6.36235 19.1645 6.03594 19.1645 5.6956C19.1645 5.35525 19.2789 5.02885 19.4825 4.78819C19.6862 4.54753 19.9624 4.41232 20.2503 4.41232H24.5937C24.8817 4.41232 25.1579 4.54753 25.3615 4.78819C25.5652 5.02885 25.6796 5.35525 25.6796 5.6956V10.8287Z" fill="#545454"/>
                                </svg>
                                <label className="text-2xl text-slate-400">Рамка на узбекском  </label>
                                <input value={frameUz} onChange={(e)=>{setFrameUz(e.target.value)}} type="text" className="w-96 h-12 text-3xl text-slate-600 outline-none border-b-2 border-solid border-slate-600"/>
                            </div>
                            <div className="relative flex flex-col pl-10 mx-5 mb-3">
                                <svg className="absolute left-0 bottom-2" xmlns="http://www.w3.org/2000/svg" width="38" height="39" viewBox="0 0 38 39" fill="none">
                                    <path d="M32.82 29.1947C32.5488 30.5232 31.8269 31.7172 30.7766 32.5746C29.7262 33.4321 28.4118 33.9003 27.0559 33.9H10.5872C9.23134 33.9003 7.91698 33.4321 6.86661 32.5746C5.81624 31.7172 5.09438 30.5232 4.8232 29.1947H15.0056L16.3254 30.5145C16.6531 30.8425 17.0423 31.1026 17.4706 31.2801C17.8989 31.4576 18.358 31.5489 18.8216 31.5489C19.2852 31.5489 19.7443 31.4576 20.1726 31.2801C20.6009 31.1026 20.99 30.8425 21.3178 30.5145L22.6376 29.1947H32.82ZM32.9376 26.842H24.9832C25.4375 26.3341 25.7351 25.7055 25.8399 25.0322C25.9447 24.3588 25.8523 23.6696 25.5739 23.0476C25.2955 22.4256 24.843 21.8975 24.271 21.5271C23.699 21.1568 23.032 20.9599 22.3506 20.9603V18.6077C23.0316 18.6072 23.698 18.4097 24.2693 18.0389C24.8406 17.6682 25.2924 17.14 25.5702 16.5183C25.848 15.8965 25.94 15.2075 25.835 14.5346C25.73 13.8617 25.4326 13.2336 24.9785 12.726H32.9376V26.842ZM4.8232 10.3733H15.0103L16.3278 9.05581C16.9894 8.39495 17.8864 8.02374 18.8216 8.02374C19.7568 8.02374 20.6537 8.39495 21.3154 9.05581L22.6329 10.3733H32.82C32.5488 9.0448 31.8269 7.85078 30.7766 6.99334C29.7262 6.1359 28.4118 5.66769 27.0559 5.66797H10.5872C9.23134 5.66769 7.91698 6.1359 6.86661 6.99334C5.81624 7.85078 5.09438 9.0448 4.8232 10.3733ZM12.7988 17.5748C12.1605 16.9372 11.7907 16.0794 11.7654 15.1776C11.74 14.2758 12.0609 13.3985 12.6623 12.726H4.70557V26.842H12.6599C12.2057 26.3341 11.9081 25.7055 11.8033 25.0322C11.6985 24.3588 11.7909 23.6696 12.0692 23.0476C12.3476 22.4256 12.8002 21.8975 13.3722 21.5271C13.9441 21.1568 14.6111 20.9599 15.2926 20.9603V18.6077C14.3892 18.6077 13.4857 18.2642 12.7988 17.5748ZM23.1834 15.9115C23.0742 16.021 22.9444 16.108 22.8014 16.1673C22.6585 16.2266 22.5053 16.2571 22.3506 16.2571C22.1959 16.2571 22.0427 16.2266 21.8997 16.1673C21.7568 16.108 21.627 16.021 21.5177 15.9115L19.9979 14.3893V25.1787L21.5177 23.6565C21.7386 23.4356 22.0382 23.3115 22.3506 23.3115C22.663 23.3115 22.9626 23.4356 23.1834 23.6565C23.4043 23.8774 23.5284 24.177 23.5284 24.4893C23.5284 24.8017 23.4043 25.1013 23.1834 25.3222L19.6544 28.8512C19.5452 28.9607 19.4154 29.0476 19.2724 29.1069C19.1295 29.1663 18.9763 29.1968 18.8216 29.1968C18.6669 29.1968 18.5137 29.1663 18.3707 29.1069C18.2278 29.0476 18.098 28.9607 17.9887 28.8512L14.4597 25.3222C14.2389 25.1013 14.1148 24.8017 14.1148 24.4893C14.1148 24.177 14.2389 23.8774 14.4597 23.6565C14.6806 23.4356 14.9802 23.3115 15.2926 23.3115C15.605 23.3115 15.9045 23.4356 16.1254 23.6565L17.6453 25.1787V14.3893L16.1254 15.9115C16.0161 16.0209 15.8862 16.1076 15.7433 16.1668C15.6004 16.226 15.4473 16.2565 15.2926 16.2565C15.1379 16.2565 14.9847 16.226 14.8419 16.1668C14.699 16.1076 14.5691 16.0209 14.4597 15.9115C14.3504 15.8021 14.2636 15.6723 14.2044 15.5294C14.1452 15.3865 14.1148 15.2333 14.1148 15.0787C14.1148 14.924 14.1452 14.7708 14.2044 14.6279C14.2636 14.485 14.3504 14.3552 14.4597 14.2458L17.9887 10.7168C18.098 10.6073 18.2278 10.5203 18.3707 10.461C18.5137 10.4017 18.6669 10.3712 18.8216 10.3712C18.9763 10.3712 19.1295 10.4017 19.2724 10.461C19.4154 10.5203 19.5452 10.6073 19.6544 10.7168L23.1834 14.2458C23.293 14.3551 23.3799 14.4849 23.4392 14.6278C23.4985 14.7707 23.529 14.9239 23.529 15.0787C23.529 15.2334 23.4985 15.3866 23.4392 15.5295C23.3799 15.6724 23.293 15.8022 23.1834 15.9115Z" fill="#545454"/>
                                </svg>
                                <label className="text-2xl text-slate-400">Размер (м)  </label>
                                <input value={size} onChange={(e)=>{setSize(e.target.value)}} type="text" className="w-96 h-12 text-3xl text-slate-600 outline-none border-b-2 border-solid border-slate-600"/>
                            </div>
                            <div className="relative flex flex-col pl-10 mx-5 mb-3">
                                <svg className="absolute left-0 bottom-2" xmlns="http://www.w3.org/2000/svg" width="38" height="39" viewBox="0 0 38 39" fill="none">
                                    <path d="M32.82 29.1947C32.5488 30.5232 31.8269 31.7172 30.7766 32.5746C29.7262 33.4321 28.4118 33.9003 27.0559 33.9H10.5872C9.23134 33.9003 7.91698 33.4321 6.86661 32.5746C5.81624 31.7172 5.09438 30.5232 4.8232 29.1947H15.0056L16.3254 30.5145C16.6531 30.8425 17.0423 31.1026 17.4706 31.2801C17.8989 31.4576 18.358 31.5489 18.8216 31.5489C19.2852 31.5489 19.7443 31.4576 20.1726 31.2801C20.6009 31.1026 20.99 30.8425 21.3178 30.5145L22.6376 29.1947H32.82ZM32.9376 26.842H24.9832C25.4375 26.3341 25.7351 25.7055 25.8399 25.0322C25.9447 24.3588 25.8523 23.6696 25.5739 23.0476C25.2955 22.4256 24.843 21.8975 24.271 21.5271C23.699 21.1568 23.032 20.9599 22.3506 20.9603V18.6077C23.0316 18.6072 23.698 18.4097 24.2693 18.0389C24.8406 17.6682 25.2924 17.14 25.5702 16.5183C25.848 15.8965 25.94 15.2075 25.835 14.5346C25.73 13.8617 25.4326 13.2336 24.9785 12.726H32.9376V26.842ZM4.8232 10.3733H15.0103L16.3278 9.05581C16.9894 8.39495 17.8864 8.02374 18.8216 8.02374C19.7568 8.02374 20.6537 8.39495 21.3154 9.05581L22.6329 10.3733H32.82C32.5488 9.0448 31.8269 7.85078 30.7766 6.99334C29.7262 6.1359 28.4118 5.66769 27.0559 5.66797H10.5872C9.23134 5.66769 7.91698 6.1359 6.86661 6.99334C5.81624 7.85078 5.09438 9.0448 4.8232 10.3733ZM12.7988 17.5748C12.1605 16.9372 11.7907 16.0794 11.7654 15.1776C11.74 14.2758 12.0609 13.3985 12.6623 12.726H4.70557V26.842H12.6599C12.2057 26.3341 11.9081 25.7055 11.8033 25.0322C11.6985 24.3588 11.7909 23.6696 12.0692 23.0476C12.3476 22.4256 12.8002 21.8975 13.3722 21.5271C13.9441 21.1568 14.6111 20.9599 15.2926 20.9603V18.6077C14.3892 18.6077 13.4857 18.2642 12.7988 17.5748ZM23.1834 15.9115C23.0742 16.021 22.9444 16.108 22.8014 16.1673C22.6585 16.2266 22.5053 16.2571 22.3506 16.2571C22.1959 16.2571 22.0427 16.2266 21.8997 16.1673C21.7568 16.108 21.627 16.021 21.5177 15.9115L19.9979 14.3893V25.1787L21.5177 23.6565C21.7386 23.4356 22.0382 23.3115 22.3506 23.3115C22.663 23.3115 22.9626 23.4356 23.1834 23.6565C23.4043 23.8774 23.5284 24.177 23.5284 24.4893C23.5284 24.8017 23.4043 25.1013 23.1834 25.3222L19.6544 28.8512C19.5452 28.9607 19.4154 29.0476 19.2724 29.1069C19.1295 29.1663 18.9763 29.1968 18.8216 29.1968C18.6669 29.1968 18.5137 29.1663 18.3707 29.1069C18.2278 29.0476 18.098 28.9607 17.9887 28.8512L14.4597 25.3222C14.2389 25.1013 14.1148 24.8017 14.1148 24.4893C14.1148 24.177 14.2389 23.8774 14.4597 23.6565C14.6806 23.4356 14.9802 23.3115 15.2926 23.3115C15.605 23.3115 15.9045 23.4356 16.1254 23.6565L17.6453 25.1787V14.3893L16.1254 15.9115C16.0161 16.0209 15.8862 16.1076 15.7433 16.1668C15.6004 16.226 15.4473 16.2565 15.2926 16.2565C15.1379 16.2565 14.9847 16.226 14.8419 16.1668C14.699 16.1076 14.5691 16.0209 14.4597 15.9115C14.3504 15.8021 14.2636 15.6723 14.2044 15.5294C14.1452 15.3865 14.1148 15.2333 14.1148 15.0787C14.1148 14.924 14.1452 14.7708 14.2044 14.6279C14.2636 14.485 14.3504 14.3552 14.4597 14.2458L17.9887 10.7168C18.098 10.6073 18.2278 10.5203 18.3707 10.461C18.5137 10.4017 18.6669 10.3712 18.8216 10.3712C18.9763 10.3712 19.1295 10.4017 19.2724 10.461C19.4154 10.5203 19.5452 10.6073 19.6544 10.7168L23.1834 14.2458C23.293 14.3551 23.3799 14.4849 23.4392 14.6278C23.4985 14.7707 23.529 14.9239 23.529 15.0787C23.529 15.2334 23.4985 15.3866 23.4392 15.5295C23.3799 15.6724 23.293 15.8022 23.1834 15.9115Z" fill="#545454"/>
                                </svg>
                                <label className="text-2xl text-slate-400">Глубина(см)  </label>
                                <input value={depth} onChange={(e)=>{setDepth(e.target.value)}} type="number" className="w-96 h-12 text-3xl text-slate-600 outline-none border-b-2 border-solid border-slate-600"/>
                            </div>
                            <div className="relative flex flex-col pl-10 mx-5 mb-7">
                                <svg className="absolute left-0 bottom-2" xmlns="http://www.w3.org/2000/svg" width="29" height="29" viewBox="0 0 29 29" fill="none">
                                    <path d="M1.56845 12.7127H10.9791C11.3951 12.7127 11.7941 12.551 12.0882 12.2632C12.3823 11.9754 12.5476 11.5851 12.5476 11.1781V1.97019C12.5476 1.56318 12.3823 1.17284 12.0882 0.885034C11.7941 0.597232 11.3951 0.435547 10.9791 0.435547H1.56845C1.15247 0.435547 0.753529 0.597232 0.459388 0.885034C0.165247 1.17284 0 1.56318 0 1.97019V11.1781C0 11.5851 0.165247 11.9754 0.459388 12.2632C0.753529 12.551 1.15247 12.7127 1.56845 12.7127ZM17.2529 12.7127H26.6636C27.0796 12.7127 27.4785 12.551 27.7727 12.2632C28.0668 11.9754 28.2321 11.5851 28.2321 11.1781V1.97019C28.2321 1.56318 28.0668 1.17284 27.7727 0.885034C27.4785 0.597232 27.0796 0.435547 26.6636 0.435547H17.2529C16.8369 0.435547 16.438 0.597232 16.1439 0.885034C15.8497 1.17284 15.6845 1.56318 15.6845 1.97019V11.1781C15.6845 11.5851 15.8497 11.9754 16.1439 12.2632C16.438 12.551 16.8369 12.7127 17.2529 12.7127ZM1.56845 28.0591H10.9791C11.3951 28.0591 11.7941 27.8975 12.0882 27.6097C12.3823 27.3219 12.5476 26.9315 12.5476 26.5245V17.3166C12.5476 16.9096 12.3823 16.5193 12.0882 16.2315C11.7941 15.9437 11.3951 15.782 10.9791 15.782H1.56845C1.15247 15.782 0.753529 15.9437 0.459388 16.2315C0.165247 16.5193 0 16.9096 0 17.3166V26.5245C0 26.9315 0.165247 27.3219 0.459388 27.6097C0.753529 27.8975 1.15247 28.0591 1.56845 28.0591ZM21.9583 28.0591C25.4183 28.0591 28.2321 25.306 28.2321 21.9206C28.2321 18.5351 25.4183 15.782 21.9583 15.782C18.4983 15.782 15.6845 18.5351 15.6845 21.9206C15.6845 25.306 18.4983 28.0591 21.9583 28.0591Z" fill="#545454"/>
                                </svg>
                                <label className="text-2xl text-slate-400">Статус</label>
                                <select value={statusId} onChange={(e) => {setStatusId(e.target.value)}} className="w-96 h-12 text-3xl text-slate-600 bg-transparent cursor-pointer border-b-2 border-solid border-slate-600">
                                    {
                                        productStatus.map(item => {
                                            return (
                                                <option value={item.id}>{item.name_ru}</option>
                                            )
                                        })
                                    }
                                </select>
                            </div>
                            <div className="relative w-full flex flex-col mx-5 mb-5">
                                <input value={equipmentRu} onChange={(e)=>{setEquipmentRu(e.target.value)}} type="text" placeholder="Комплектация" className="w-full h-12 text-3xl text-slate-600 outline-none border-b-2 border-solid border-slate-600"/>
                            </div>
                            <div className="relative w-full flex flex-col mx-5 mb-3">
                                <input value={equipmentUz} onChange={(e)=>{setEquipmentUz(e.target.value)}} type="text" placeholder="Комплектация на узбекском" className="w-full h-12 text-3xl text-slate-600 outline-none border-b-2 border-solid border-slate-600"/>
                            </div>
                        </div>
                        <div onClick={()=>{editProduct()}} className="w-60 rounded-3xl text-white text-2xl text-center pt-1.5 pb-1.5 cursor-pointer mt-6" style={{"backgroundColor": "rgb(0, 147, 152)"}}>Добавить</div>
                    </> : 
                    <>
                        <div className="flex flex-col items-center">
                            <img className={`grayscale duration-300 w-40 ${ statusReq !== "active" ? "grayscale-0" : ""}`} src={gr} alt=""/> 
                            <h2 className="text-5xl font-bolder mb-10">Спасибо!</h2>
                            <p className="text-2xl font-middle">Удаление прошло успешно.</p>
                        </div>
                    </>
                }
                </div>
        </>
    )
}